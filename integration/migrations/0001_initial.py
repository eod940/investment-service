# Generated by Django 4.1.1 on 2022-09-21 18:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('korean_name', models.CharField(blank=True, max_length=150, verbose_name='korean name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='종목명')),
                ('isin', models.CharField(max_length=20, unique=True, verbose_name='ISIN')),
                ('asset_group', models.CharField(max_length=50, verbose_name='자산그룹')),
            ],
            options={
                'verbose_name': '종목',
                'db_table': 'stocks',
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_account_number', models.CharField(max_length=14, verbose_name='계좌번호')),
                ('user_name', models.CharField(blank=True, max_length=150, verbose_name='주문 유저 이름')),
                ('transfer_amount', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='거래 금액')),
                ('order_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '주문',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='Holdings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holdings_share', models.IntegerField(default=1, verbose_name='보유 종목 수량')),
                ('holdings_current_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='보유 종목 현재가')),
                ('investment_principal', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='투자 원금')),
                ('holdings_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='integration.stock', verbose_name='보유 종목')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '보유 종목',
                'db_table': 'investments',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accounts_number', models.CharField(max_length=14, verbose_name='계좌번호')),
                ('accounts_name', models.CharField(max_length=30, verbose_name='계좌명')),
                ('accounts_brokerage', models.CharField(max_length=50, verbose_name='증권사')),
                ('accounts_total', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='계좌 총 자산')),
                ('accounts_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='계좌 소유자')),
            ],
            options={
                'verbose_name': '계좌',
                'db_table': 'accounts',
            },
        ),
    ]
